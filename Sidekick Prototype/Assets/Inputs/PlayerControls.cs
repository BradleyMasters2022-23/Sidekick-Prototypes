//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.2
//     from Assets/Inputs/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""f21508b3-105c-48fa-9890-7338adecd94a"",
            ""actions"": [
                {
                    ""name"": ""SlowTime"",
                    ""type"": ""Button"",
                    ""id"": ""b6b4ec73-3011-4d26-9225-e62f15e43aed"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""f2832b73-d599-4556-a516-55e52eadcfde"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Mouse"",
                    ""type"": ""PassThrough"",
                    ""id"": ""83adef01-8836-4038-a78c-453986b901ad"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""eec8f89c-6b3a-4f46-85d4-08ec849ea0d9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""e0487cc4-fbfb-42e4-8e2e-602bcd5c4871"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""809f8691-8cfa-4437-87a9-2a5080eb8a46"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HoldSlow"",
                    ""type"": ""Button"",
                    ""id"": ""ad12a9a5-e972-4a9c-a888-7b6b7a287d32"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HealPlayer"",
                    ""type"": ""Button"",
                    ""id"": ""c0f17d82-b584-41de-92f2-c85f0034880c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TogglePlatformsDEBUG"",
                    ""type"": ""Button"",
                    ""id"": ""c9f0b839-177a-47fd-a7dc-4f2247c7fc10"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HealCheat"",
                    ""type"": ""Button"",
                    ""id"": ""b602a078-23ae-4ec5-91d7-4fde0c163c1c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShootToggle"",
                    ""type"": ""Button"",
                    ""id"": ""2308c0f1-d2bf-4f97-be66-de8577c24be0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CamToggle"",
                    ""type"": ""Button"",
                    ""id"": ""fa92f886-28ec-4991-8de4-347e32949727"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleSlow-DEBUG"",
                    ""type"": ""Button"",
                    ""id"": ""3488d54d-076c-4771-a7be-1d2f636e1f94"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleUnlimitedSlow-DEBUG"",
                    ""type"": ""Button"",
                    ""id"": ""7ae9c858-74d3-4d0c-979a-181c367d80f9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RestartScene-DEBUG"",
                    ""type"": ""Button"",
                    ""id"": ""21715588-ab21-42ea-98ca-50e179668210"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""10a7988e-f714-48ea-beb9-3b03e018387f"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SlowTime"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""48c5d5f1-65c5-4afb-b4f7-d71a50ed2aa3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b5e6f8de-132a-4c5f-8c3a-a6c74d003c55"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""03b7b355-4f9e-4f30-a7b6-a762d1af57d8"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2b729736-dbbc-47c9-9e16-d4ea51410d40"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6dfac77a-e651-4d3f-9940-b47eed2294f0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0d946d32-c2e4-4743-9e00-df1ffbfbaa21"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76fce65d-1876-4016-8b08-281616395914"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""31cc8038-ebe4-4ad3-8889-e08c36e19566"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16574209-3354-4bb9-8d79-0d97be1d6335"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""98604400-5619-40b9-8a0b-6b4dfe574649"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HoldSlow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2f8a6de1-2d4f-4030-b5fe-7e7a3855935c"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HealPlayer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5c6d2927-80a1-4f31-acc2-136c7ae4415f"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HealCheat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4a88e36-815c-4fd4-9e5a-f8c12a6298bc"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TogglePlatformsDEBUG"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6616786f-6333-4e48-8882-88e18ce47102"",
                    ""path"": ""<Keyboard>/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RestartScene-DEBUG"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c726cc3e-e382-41f2-b341-eb1e5c765e11"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleUnlimitedSlow-DEBUG"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c8613ba7-f04a-460b-bedf-4eee16d68dbd"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleSlow-DEBUG"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0af50ef8-0d1a-4e14-b414-1277ae4cf42d"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CamToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dddd5e08-95bb-4fad-b8bc-33cac4b0708d"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShootToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_SlowTime = m_Player.FindAction("SlowTime", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Mouse = m_Player.FindAction("Mouse", throwIfNotFound: true);
        m_Player_Shoot = m_Player.FindAction("Shoot", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Pause = m_Player.FindAction("Pause", throwIfNotFound: true);
        m_Player_HoldSlow = m_Player.FindAction("HoldSlow", throwIfNotFound: true);
        m_Player_HealPlayer = m_Player.FindAction("HealPlayer", throwIfNotFound: true);
        m_Player_TogglePlatformsDEBUG = m_Player.FindAction("TogglePlatformsDEBUG", throwIfNotFound: true);
        m_Player_HealCheat = m_Player.FindAction("HealCheat", throwIfNotFound: true);
        m_Player_ShootToggle = m_Player.FindAction("ShootToggle", throwIfNotFound: true);
        m_Player_CamToggle = m_Player.FindAction("CamToggle", throwIfNotFound: true);
        m_Player_ToggleSlowDEBUG = m_Player.FindAction("ToggleSlow-DEBUG", throwIfNotFound: true);
        m_Player_ToggleUnlimitedSlowDEBUG = m_Player.FindAction("ToggleUnlimitedSlow-DEBUG", throwIfNotFound: true);
        m_Player_RestartSceneDEBUG = m_Player.FindAction("RestartScene-DEBUG", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_SlowTime;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Mouse;
    private readonly InputAction m_Player_Shoot;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Pause;
    private readonly InputAction m_Player_HoldSlow;
    private readonly InputAction m_Player_HealPlayer;
    private readonly InputAction m_Player_TogglePlatformsDEBUG;
    private readonly InputAction m_Player_HealCheat;
    private readonly InputAction m_Player_ShootToggle;
    private readonly InputAction m_Player_CamToggle;
    private readonly InputAction m_Player_ToggleSlowDEBUG;
    private readonly InputAction m_Player_ToggleUnlimitedSlowDEBUG;
    private readonly InputAction m_Player_RestartSceneDEBUG;
    public struct PlayerActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @SlowTime => m_Wrapper.m_Player_SlowTime;
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Mouse => m_Wrapper.m_Player_Mouse;
        public InputAction @Shoot => m_Wrapper.m_Player_Shoot;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Pause => m_Wrapper.m_Player_Pause;
        public InputAction @HoldSlow => m_Wrapper.m_Player_HoldSlow;
        public InputAction @HealPlayer => m_Wrapper.m_Player_HealPlayer;
        public InputAction @TogglePlatformsDEBUG => m_Wrapper.m_Player_TogglePlatformsDEBUG;
        public InputAction @HealCheat => m_Wrapper.m_Player_HealCheat;
        public InputAction @ShootToggle => m_Wrapper.m_Player_ShootToggle;
        public InputAction @CamToggle => m_Wrapper.m_Player_CamToggle;
        public InputAction @ToggleSlowDEBUG => m_Wrapper.m_Player_ToggleSlowDEBUG;
        public InputAction @ToggleUnlimitedSlowDEBUG => m_Wrapper.m_Player_ToggleUnlimitedSlowDEBUG;
        public InputAction @RestartSceneDEBUG => m_Wrapper.m_Player_RestartSceneDEBUG;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @SlowTime.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSlowTime;
                @SlowTime.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSlowTime;
                @SlowTime.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSlowTime;
                @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Mouse.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouse;
                @Mouse.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouse;
                @Mouse.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouse;
                @Shoot.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShoot;
                @Jump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Pause.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPause;
                @HoldSlow.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHoldSlow;
                @HoldSlow.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHoldSlow;
                @HoldSlow.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHoldSlow;
                @HealPlayer.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHealPlayer;
                @HealPlayer.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHealPlayer;
                @HealPlayer.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHealPlayer;
                @TogglePlatformsDEBUG.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnTogglePlatformsDEBUG;
                @TogglePlatformsDEBUG.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnTogglePlatformsDEBUG;
                @TogglePlatformsDEBUG.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnTogglePlatformsDEBUG;
                @HealCheat.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHealCheat;
                @HealCheat.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHealCheat;
                @HealCheat.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHealCheat;
                @ShootToggle.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShootToggle;
                @ShootToggle.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShootToggle;
                @ShootToggle.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShootToggle;
                @CamToggle.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCamToggle;
                @CamToggle.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCamToggle;
                @CamToggle.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCamToggle;
                @ToggleSlowDEBUG.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnToggleSlowDEBUG;
                @ToggleSlowDEBUG.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnToggleSlowDEBUG;
                @ToggleSlowDEBUG.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnToggleSlowDEBUG;
                @ToggleUnlimitedSlowDEBUG.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnToggleUnlimitedSlowDEBUG;
                @ToggleUnlimitedSlowDEBUG.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnToggleUnlimitedSlowDEBUG;
                @ToggleUnlimitedSlowDEBUG.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnToggleUnlimitedSlowDEBUG;
                @RestartSceneDEBUG.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRestartSceneDEBUG;
                @RestartSceneDEBUG.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRestartSceneDEBUG;
                @RestartSceneDEBUG.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRestartSceneDEBUG;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @SlowTime.started += instance.OnSlowTime;
                @SlowTime.performed += instance.OnSlowTime;
                @SlowTime.canceled += instance.OnSlowTime;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Mouse.started += instance.OnMouse;
                @Mouse.performed += instance.OnMouse;
                @Mouse.canceled += instance.OnMouse;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @HoldSlow.started += instance.OnHoldSlow;
                @HoldSlow.performed += instance.OnHoldSlow;
                @HoldSlow.canceled += instance.OnHoldSlow;
                @HealPlayer.started += instance.OnHealPlayer;
                @HealPlayer.performed += instance.OnHealPlayer;
                @HealPlayer.canceled += instance.OnHealPlayer;
                @TogglePlatformsDEBUG.started += instance.OnTogglePlatformsDEBUG;
                @TogglePlatformsDEBUG.performed += instance.OnTogglePlatformsDEBUG;
                @TogglePlatformsDEBUG.canceled += instance.OnTogglePlatformsDEBUG;
                @HealCheat.started += instance.OnHealCheat;
                @HealCheat.performed += instance.OnHealCheat;
                @HealCheat.canceled += instance.OnHealCheat;
                @ShootToggle.started += instance.OnShootToggle;
                @ShootToggle.performed += instance.OnShootToggle;
                @ShootToggle.canceled += instance.OnShootToggle;
                @CamToggle.started += instance.OnCamToggle;
                @CamToggle.performed += instance.OnCamToggle;
                @CamToggle.canceled += instance.OnCamToggle;
                @ToggleSlowDEBUG.started += instance.OnToggleSlowDEBUG;
                @ToggleSlowDEBUG.performed += instance.OnToggleSlowDEBUG;
                @ToggleSlowDEBUG.canceled += instance.OnToggleSlowDEBUG;
                @ToggleUnlimitedSlowDEBUG.started += instance.OnToggleUnlimitedSlowDEBUG;
                @ToggleUnlimitedSlowDEBUG.performed += instance.OnToggleUnlimitedSlowDEBUG;
                @ToggleUnlimitedSlowDEBUG.canceled += instance.OnToggleUnlimitedSlowDEBUG;
                @RestartSceneDEBUG.started += instance.OnRestartSceneDEBUG;
                @RestartSceneDEBUG.performed += instance.OnRestartSceneDEBUG;
                @RestartSceneDEBUG.canceled += instance.OnRestartSceneDEBUG;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnSlowTime(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnMouse(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnHoldSlow(InputAction.CallbackContext context);
        void OnHealPlayer(InputAction.CallbackContext context);
        void OnTogglePlatformsDEBUG(InputAction.CallbackContext context);
        void OnHealCheat(InputAction.CallbackContext context);
        void OnShootToggle(InputAction.CallbackContext context);
        void OnCamToggle(InputAction.CallbackContext context);
        void OnToggleSlowDEBUG(InputAction.CallbackContext context);
        void OnToggleUnlimitedSlowDEBUG(InputAction.CallbackContext context);
        void OnRestartSceneDEBUG(InputAction.CallbackContext context);
    }
}
